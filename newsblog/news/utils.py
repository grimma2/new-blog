import re
from django.utils.text import slugify as django_slugify
from nltk.corpus import stopwords
import nltk

# –°–∫–∞—á–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ NLTK (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç)
try:
    nltk.data.find('corpora/stopwords')
except LookupError:
    nltk.download('stopwords')

def detect_language(text):
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —è–∑—ã–∫ —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É—è NLTK stopwords
    """
    if not text or len(text.strip()) < 3:
        return 'en'  # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    
    # –°–ø–∏—Å–æ–∫ —è–∑—ã–∫–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    languages = ['russian', 'english', 'german', 'french', 'spanish', 'italian']
    
    # –¢–æ–∫–µ–Ω–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    words = re.findall(r'\b\w+\b', text.lower())
    if not words:
        return 'en'
    
    # –°—á–∏—Ç–∞–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è —Å–æ —Å—Ç–æ–ø-—Å–ª–æ–≤–∞–º–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —è–∑—ã–∫–∞
    scores = {}
    for lang in languages:
        try:
            lang_stopwords = set(stopwords.words(lang))
            score = sum(1 for word in words if word in lang_stopwords)
            scores[lang] = score
        except:
            scores[lang] = 0
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —è–∑—ã–∫ —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º —Å—á–µ—Ç–æ–º
    detected_lang = max(scores, key=scores.get)
    
    # –ï—Å–ª–∏ —Å—á–µ—Ç —Å–ª–∏—à–∫–æ–º –Ω–∏–∑–∫–∏–π, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
    if scores[detected_lang] == 0:
        return 'en'
    
    return detected_lang

def transliterate_russian(text):
    """
    –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∞—Ü–∏—è —Ä—É—Å—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –≤ –ª–∞—Ç–∏–Ω–∏—Ü—É
    """
    translit_dict = {
        '–∞': 'a', '–±': 'b', '–≤': 'v', '–≥': 'g', '–¥': 'd', '–µ': 'e', '—ë': 'yo',
        '–∂': 'zh', '–∑': 'z', '–∏': 'i', '–π': 'y', '–∫': 'k', '–ª': 'l', '–º': 'm',
        '–Ω': 'n', '–æ': 'o', '–ø': 'p', '—Ä': 'r', '—Å': 's', '—Ç': 't', '—É': 'u',
        '—Ñ': 'f', '—Ö': 'kh', '—Ü': 'ts', '—á': 'ch', '—à': 'sh', '—â': 'sch',
        '—ä': '', '—ã': 'y', '—å': '', '—ç': 'e', '—é': 'yu', '—è': 'ya',
        '–ê': 'A', '–ë': 'B', '–í': 'V', '–ì': 'G', '–î': 'D', '–ï': 'E', '–Å': 'Yo',
        '–ñ': 'Zh', '–ó': 'Z', '–ò': 'I', '–ô': 'Y', '–ö': 'K', '–õ': 'L', '–ú': 'M',
        '–ù': 'N', '–û': 'O', '–ü': 'P', '–†': 'R', '–°': 'S', '–¢': 'T', '–£': 'U',
        '–§': 'F', '–•': 'Kh', '–¶': 'Ts', '–ß': 'Ch', '–®': 'Sh', '–©': 'Sch',
        '–™': '', '–´': 'Y', '–¨': '', '–≠': 'E', '–Æ': 'Yu', '–Ø': 'Ya'
    }
    
    result = ''
    for char in text:
        result += translit_dict.get(char, char)
    
    return result

def create_slug(text):
    """
    –°–æ–∑–¥–∞–µ—Ç —Å–ª–∞–≥ –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ä—É—Å—Å–∫–æ–≥–æ —è–∑—ã–∫–∞
    """
    if not text:
        return ''
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ä—É—Å—Å–∫–∏—Ö —Å–∏–º–≤–æ–ª–æ–≤ (–ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–±)
    has_cyrillic = bool(re.findall(r'[–∞-—è—ë]', text.lower()))
    
    if has_cyrillic:
        # –¢—Ä–∞–Ω—Å–ª–∏—Ç–µ—Ä–∏—Ä—É–µ–º —Ä—É—Å—Å–∫–∏–π —Ç–µ–∫—Å—Ç
        transliterated = transliterate_russian(text)
        return django_slugify(transliterated)
    else:
        # –î–ª—è –ª–∞—Ç–∏–Ω—Å–∫–æ–≥–æ —Ç–µ–∫—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π slugify
        return django_slugify(text)

def get_or_create_tag_by_name(name):
    """
    –ü–æ–ª—É—á–∞–µ—Ç –∏–ª–∏ —Å–æ–∑–¥–∞–µ—Ç —Ç–µ–≥ –ø–æ –∏–º–µ–Ω–∏, –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–≤–∞—è —Å–ª–∞–≥.
    –ï—Å–ª–∏ —Ç–µ–≥–∞ –Ω–µ—Ç –≤ –±–∞–∑–µ - —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π.
    """
    from .models import Tag
    
    if not name or not name.strip():
        return None
    
    name = name.strip()
    slug = create_slug(name)
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º get_or_create –¥–ª—è –∞—Ç–æ–º–∞—Ä–Ω–æ–π –æ–ø–µ—Ä–∞—Ü–∏–∏
    tag, created = Tag.objects.get_or_create(
        slug=slug,
        defaults={'name': name}
    )
    
    # –ï—Å–ª–∏ —Ç–µ–≥ —É–∂–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–ª, –Ω–æ —Å –¥—Ä—É–≥–∏–º –∏–º–µ–Ω–µ–º, –æ–±–Ω–æ–≤–ª—è–µ–º –∏–º—è
    if not created and tag.name != name:
        tag.name = name
        tag.save()
        print(f"üìù –û–±–Ω–æ–≤–ª–µ–Ω–æ –∏–º—è —Ç–µ–≥–∞: '{tag.name}' (slug: {tag.slug})")
    elif created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —Ç–µ–≥: '{tag.name}' (slug: {tag.slug})")
    
    return tag 